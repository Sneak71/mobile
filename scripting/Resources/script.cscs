count = 0;
correct = 0;
maxNumber = 25;
squaresOnly = 16;
stopwatch = 0;
data = {};
answers = {};
data2 = {};
answers2 = {};
mode = 0;

currIndex = 0;
rightAnswer = 0;

fontSize = 26;
fontSizeSm = 18;
scale = 0.90;

total      = GetSetting("total", "double", 20);
keyBest    = "";
keyTime    = "";
keyDate    = "";

bestResult = 0.0;
bestTime   = "";
bestDate   = "";

AutoScale(scale);
SetBackgroundColor("cyan");
appName = "Larissa Math App";

for (i = 2; i < maxNumber; i++) {
  for (j = i; j <= maxNumber; j++) {
    data.Add(i + " + " + j);
    answers.Add(i + j);
    if (i == j || j <= squaresOnly) {
      data.Add(i + " * " + j);
      answers.Add(i * j);

      data.Add(i * j + " / " + j);
      answers.Add(i);
    }
    if (j - i > 10 && i > 10 && i % 5 != 0 ) {
      data.Add(j + " - " + i);
      answers.Add(j - i);
    }
  }
}

for (a = -9; a <= 9; a++) {
  if (a == 0) {
    continue;
  }
  for (b = -9; b <= 9; b++) {
    if (b == 0) {
      continue;
    }
    for (x = 2; x <= 9; x++) {
      sign = b < 0 ? "" : "+";
      c = a * x + b;
      data2.Add(a + "x " + sign + b + " = " + c);
      answers2.Add((c - b)/a);
    }
  }
}

totalCount  = data.size();
totalCount2 = data2.size();
printConsole("Loaded " + totalCount + "/" + totalCount2 + " entries.");

locQuizLab = GetLocation("ROOT", "CENTER", "ROOT", "CENTER", -120, 0);
AddLabel(locQuizLab, "quizLab", "", 280, 100);
SetFontSize(quizLab, fontSize);

locQuizLab2 = GetLocation(quizLab, "RIGHT", quizLab, "CENTER");
AddLabel(locQuizLab2, "quizLab2", "", 60, 100);
SetFontSize(quizLab2, fontSize);

locTextAnswer = GetLocation(quizLab2, "RIGHT", quizLab, "CENTER", 10);
AddTextEdit(locTextAnswer, "textAnswer", "", 100, 100);
SetFontSize(textAnswer, fontSize);
NumKeyboard(textAnswer);

locButtonAnswer = GetLocation(textAnswer, "RIGHT", textAnswer, "CENTER", 20);
AddButton(locButtonAnswer, "buttonAnswer", "", 100, 100);
SetText(buttonAnswer, "Go!");

locAnswerLab = GetLocation("ROOT", "CENTER", quizLab2, "BOTTOM", 0, 20);
AddLabel(locAnswerLab, "answerLab", "", 460, 60);
SetFontSize(answerLab, fontSizeSm - 1);


locCorrectLab = GetLocation("ROOT", "CENTER", "ROOT", "TOP", -120, 60);
AddLabel(locCorrectLab, "correctLab", "", 180, 60);
SetFontSize(correctLab, fontSizeSm - 2);
SetFontColor(correctLab, "dark_green");

locWrongLab = GetLocation(correctLab, "RIGHT", correctLab, "CENTER");
AddLabel(locWrongLab, "wrongLab", "", 180, 60);
SetFontSize(wrongLab, fontSizeSm - 2);
SetFontColor(wrongLab, "red");

locTimeLab = GetLocation("ROOT", "ALIGN_RIGHT", correctLab, "CENTER", 0);
AddLabel(locTimeLab, "timeLab", "", 160, 60);
SetFontSize(timeLab, fontSizeSm - 2);

locButtonNew = GetLocation("ROOT", "CENTER", wrongLab, "BOTTOM", 0, 40);
AddButton(locButtonNew, "buttonNew", "", 220, 60);
SetText(buttonNew, "New Quiz");

locBestLab = GetLocation("ROOT", "CENTER", buttonNew, "BOTTOM", 0, 40);
AddLabel(locBestLab, "bestLab", "", 320, 30);
SetFontSize(bestLab, fontSizeSm - 4);
AlignText(bestLab, "center");

locDateLab = GetLocation("ROOT", "CENTER", bestLab, "BOTTOM", 0, 0);
AddLabel(locDateLab, "dateLab", "", 320, 30);
SetFontSize(dateLab, fontSizeSm - 4);
AlignText(dateLab, "center");


locWordsLab = GetLocation("ROOT", "LEFT", "ROOT", "BOTTOM", 20, -80);
AddLabel(locWordsLab, "wordsLab", "Quiz Entries: ", 160, 30);
SetFontSize(wordsLab, fontSizeSm - 6);

locWordsStepper = GetLocation(wordsLab, "RIGHT", wordsLab, "CENTER", 10, 0);
AddSfStepper(locWordsStepper, "wordsStepper", "30:5:100:5", 260, 60);
SetValue(wordsStepper, total);
SetFontSize(wordsStepper, fontSizeSm - 6);
AddAction(wordsStepper, "updateTotalEntries");

locQuizModeLab = GetLocation("ROOT", "LEFT", wordsStepper, "TOP", 20, -10);
AddLabel(locQuizModeLab, "quizModeLab", "Quiz Mode:", 160, 80);
SetFontSize(quizModeLab, fontSizeSm - 6);

locQuizMode = GetLocation(quizModeLab, "RIGHT", quizModeLab, "CENTER", 10, 0);
AddSegmentedControl(locQuizMode, "segQuizMode", "Simple:Medium:Advanced", 380, 60);
SetFontSize(segQuizMode, fontSizeSm - 6);
AddAction(segQuizMode, "updateMode");

HideView(buttonAnswer);
HideView(textAnswer);

function setBest() {
  if (bestResult > 0) {
    SetText(bestLab, "Best: " + bestResult + "%. Time: " + bestTime + ".");
    SetText(dateLab, bestDate);
  } else {
    SetText(bestLab, "");
    SetText(dateLab, "");
  }
}
setBest();

function updateMode(sender, arg) {
  printConsole("New Mode=" + arg);
  mode = int(arg);
  updateTotalEntries(sender, total);
}

function updateTotalEntries(sender, arg) {
  total      = arg;
  keyBest    = "best_" + total + "_" + mode;
  keyTime    = "time_" + total + "_" + mode;
  keyDate    = "date_" + total + "_" + mode;

  bestResult = GetSetting(keyBest, "double", 0.0);
  bestTime   = GetSetting(keyTime, "string", "00:00");
  bestDate   = GetSetting(keyDate, "string", "");
  SetSetting("total", total, "int");
  setBest();
}
updateTotalEntries("", total);

function prepareNext() {
  if (mode == 0) {
    currIndex   = GetRandom(totalCount);
    rightAnswer = answers[currIndex];
    quizEntry   = data[currIndex];
  } else {
    currIndex   = GetRandom(totalCount2);
    rightAnswer = answers2[currIndex];
    quizEntry   = data2[currIndex];
  }

  printConsole("rightAnswer=" + rightAnswer + ", quizEntry=" + quizEntry + ", currIndex=" + currIndex);
  SetText(quizLab, quizEntry);
  SetText(textAnswer, "");
  ShowHideKeyboard(textAnswer, true);
  count++;
}

function buttonNew_click(sender, arg) {
  count = 0;
  correct = 0;

  SetText(quizLab2, mode == 0 ? "=" : "");
  SetText(answerLab, "");
  SetText(correctLab, "");
  SetText(wrongLab, "");
  SetText(timeLab, "00:00");

  ShowView(buttonAnswer);
  ShowView(textAnswer);

  prepareNext();
  stopwatch = StartStopWatch();
  Schedule(1000, "quiz_timer", "", "quiz_timeoutId", 1);

  printConsole("Started new quiz with number of entries: " + total);
}

function quiz_timer(sender, arg) {
  elapsed = StopWatchElapsed("mm:ss");
  SetText(timeLab, elapsed);
}

function checkQuizCompleted() {
  if (count < total || count < 3) {
    return false;
  }

  HideView(buttonAnswer);
  CancelSchedule("quiz_timeoutId");
  stopwatch = StopStopWatch();

  ShowHideKeyboard(textAnswer, false);

  percent = Round(double(correct)/double(total) * 100, 2);
  if (percent == 100) {
    extra = ". Excellent!";
  } elif (percent >= 90)  {
    extra = ". Very Good!";
  } elif (percent >= 80)  {
    extra = ". Good!";
  } else  {
    extra = ". Please excercise more!";
  }

  currentTime = GetText(timeLab);
  if (percent > bestResult || (percent == bestResult && currentTime < bestTime)) {
    bestResult = percent;
    bestTime = currentTime;
    bestDate = Now("yyyy/MM/dd HH:mm:ss");
    SetSetting(keyBest, bestResult);
    SetSetting(keyTime, bestTime);
    SetSetting(keyDate, bestDate);
    setBest();
  }
 
  msg = "Quiz completed! Correct: " + percent + "%" + extra;
  AlertDialog(appName, msg);

  return true;
}

function delayedNext(sender, arg) {
  if (!checkQuizCompleted()) {
    prepareNext();
  }
}

function buttonAnswer_click(sender, arg) {
  ShowHideKeyboard(textAnswer, false);
  answer = getText(textAnswer);
  wasCorrect = (answer == rightAnswer);
  correct += wasCorrect;
  wrong = count - correct;

  textColor = wasCorrect ? "dark_green" : "red";
  msg = wasCorrect ? "Correct! " : "Wrong! ";
  SetFontColor(answerLab, textColor);

  if (mode == 0) {
    msg += data[currIndex] + " = " + answers[currIndex];
  } else {
    msg += data2[currIndex] + "   : x = " + answers2[currIndex];
  }

  SetText(answerLab, msg);
  SetText(correctLab, "Correct: " + correct);
  SetText(wrongLab, "Wrong: " + wrong);

  delay = wasCorrect ? 500 : 2000;
  Schedule(delay, "delayedNext", sender, arg);
}

