AutoScale();
voice = "en-US";

locButtonTalk = GetLocation("ROOT", "CENTER", "ROOT", "BOTTOM", 0, 0);
AddButton(locButtonTalk, "buttonTalk", "Click me", 200, 80);
AddAction(buttonTalk,  "talk_click");

function talk_click(sender, arg) {
  ShowToast("Please say your name...");
  VoiceRecognition("voice_recog", voice);
}

function voice_recog(errorStatus, recognized) {
  if (errorStatus != "") {
    AlertDialog("CSCS", "Error: " + errorStatus);
  } else {
    ShowToast("Word recognized: " + recognized);
    Speak("Hello, " + recognized, voice);
  }
}

//apiUrl = "https://v3.exchangerate-api.com/bulk/c2cd68c6d7b852231b6d69ee/";
apiUrl = "https://v3.exchangerate-api.com/pair/c2cd68c6d7b852231b6d69ee/";

function on_refresh(sender, arg) {
  currency1 = GetText(cbCurrency1);
  currency2 = GetText(cbCurrency2);
  WriteConsole("currency1=", currency1, ", currency2=", currency2);
  currency_request(currency1, currency2);
}

function currency_request(currency1, currency2) {
  if (currency1 == currency2) {
    // A shortcut for the same currency
    time = Now("HH:mm:ss");
    date = Now("yyyy/MM/dd");
    rate = 1.0;
  } else {
    url = apiUrl + currency1 + "/" + currency2;
    data = WebRequest(url);
    WriteConsole(data);
    // {"result":"success","timestamp":1511464063,"from":"USD","to":"CHF","rate":0.99045395}

    index1 = StrIndexOf(data, "\"timestamp\":");
    start = index1 + 12;
    index2 = StrIndexOf(data, ",", "", start);
    if (index1 < 0 || index2 < 0) {
      data = StrReplace(data, "\"", "");
      ShowToast("Couldn't extract data from " + data, 10);
      return;
    }

    timestamp = Substring(data, start, index2 - start);
    time = Timestamp(timestamp, "HH:mm:ss");
    date = Timestamp(timestamp, "yyyy/MM/dd");

    index1 = StrIndexOf(data, "\"rate\":", "", index2);
    start = index1 + 7;
    index2 = StrIndexOf(data, "}", "", start);
    if (index1 < 0 || index2 < 0) {
      ShowToast("Couldn't extract data from " + data, 10);
      return;
    }
    rate = Substring(data, start, index2 - start);
    WriteConsole(timestamp, "-->", time, " ", date, ", rate: ", rate);
  }

  SetText(labelRateValue, rate);
  SetText(labelDateValue, date);
  SetText(labelTimeValue, time);
}

function init() {
  SetVisible(buttonTalk, false);

  currencies = {"EUR",   "USD",   "GBP",   "CHF",   "JPY",   "CNY",   "MXN",   "RUB",   "BRL",   "SAR"};
  flags      = {"eu_EU", "en_US", "en_GB", "de_CH", "ja_JP", "zh_CN", "es_MX", "ru_RU", "pt_BR", "ar_SA"};

  AddWidgetData(cbCurrency1, currencies);
  AddWidgetImages(cbCurrency1, flags);

  AddWidgetData(cbCurrency2, currencies);
  AddWidgetImages(cbCurrency2, flags);

  //AddBorder(buttonRefresh, 0, 0);
  SetImage(buttonRefresh,   "coins");
  AddAction(buttonRefresh,  "on_refresh");
  SetText(buttonRefresh,    "Convert");
  SetFontColor(buttonRefresh, "white");
  SetFontSize(buttonRefresh, 20);

  SetSize(cbCurrency1, 80, 40);
  SetSize(cbCurrency2, 80, 40);
}

function on_portrait(sender, arg) {
  AddOrSelectTab("Rates", "rates_active.png", "rates_inactive.png");
  SetBackground("us_bg");

  locCurrency1 = GetLocation("ROOT", "LEFT", "ROOT", "TOP", 10, 80);
  AddCombobox(locCurrency1, "cbCurrency1", "", 280, 100);

  //locCurrency2 = GetLocation("ROOT", "CENTER", cbCurrency1, "BOTTOM");
  locCurrency2 = GetLocation("ROOT", "RIGHT", cbCurrency1, "CENTER", -10);
  AddCombobox(locCurrency2, "cbCurrency2", "", 280, 100);

  locRateLabel = GetLocation("ROOT", "CENTER", cbCurrency2, "BOTTOM", -80, 60);
  AddLabel(locRateLabel, "labelRate", "Rate:", 200, 80);

  locRateValue = GetLocation("ROOT", "CENTER", labelRate, "CENTER", 100);
  AddLabel(locRateValue, "labelRateValue", "", 240, 80);

  locDateLabel = GetLocation("ROOT", "CENTER", labelRate, "BOTTOM", -80);
  AddLabel(locDateLabel, "labelDate", "Date:", 200, 80);

  locDateValue = GetLocation("ROOT", "CENTER", labelDate, "CENTER", 100);
  AddLabel(locDateValue, "labelDateValue", "", 240, 80);

  locTimeLabel = GetLocation("ROOT", "CENTER", labelDate, "BOTTOM", -80);
  AddLabel(locTimeLabel, "labelTime", "Time:", 200, 80);

  locTimeValue = GetLocation("ROOT", "CENTER", labelTime, "CENTER", 100);
  AddLabel(locTimeValue, "labelTimeValue", "", 240, 80);

  locRefresh = GetLocation("ROOT", "CENTER", "ROOT", "BOTTOM", 0, -4);
  AddButton(locRefresh, "buttonRefresh", "", 200, 100);

  AddOrSelectTab("Settings", "settings_active.png", "settings_inactive.png");
}

function on_landscape(sender, arg) {
  AddOrSelectTab("Rates", "rates_active.png", "rates_inactive.png");
  SetBackground("us_w_bg");

  locCurrency1 = GetLocation("ROOT", "LEFT", "ROOT", "CENTER", 50);
  AddCombobox(locCurrency1, "cbCurrency1", "", 200, 120);

  locCurrency2 = GetLocation(cbCurrency1, "RIGHT", "ROOT", "CENTER", 40);
  AddCombobox(locCurrency2, "cbCurrency2", "", 200, 120);

  locDateLabel = GetLocation(cbCurrency2, "RIGHT", "ROOT", "CENTER", 60);
  AddLabel(locDateLabel, "labelDate", "Date:", 180, 80);

  locDateValue = GetLocation(labelDate, "RIGHT", labelDate, "CENTER", 10);
  AddLabel(locDateValue, "labelDateValue", "", 220, 80);

  locRateLabel = GetLocation(cbCurrency2, "RIGHT", labelDate, "TOP", 60);
  AddLabel(locRateLabel, "labelRate", "Rate:", 180, 80);

  locRateValue = GetLocation(labelRate, "RIGHT", labelRate, "CENTER", 10);
  AddLabel(locRateValue, "labelRateValue", "", 220, 80);

  locTimeLabel = GetLocation(cbCurrency2, "RIGHT", labelDate, "BOTTOM", 60);
  AddLabel(locTimeLabel, "labelTime", "Time:", 180, 80);

  locTimeValue = GetLocation(labelTime, "RIGHT", labelTime, "CENTER", 10);
  AddLabel(locTimeValue, "labelTimeValue", "", 220, 80);

  locRefresh = GetLocation("ROOT", "CENTER", "ROOT", "BOTTOM", 0, -4);
  AddButton(locRefresh, "buttonRefresh", "", 180, 90);

  AddOrSelectTab("Settings", "settings_active.png", "settings_inactive.png");
}

RegisterOrientationChange("on_portrait", "on_landscape");
init();

if (Orientation == "Portrait") {
  on_portrait("", "");
} else {
  on_landscape("", "");
}

SelectTab(0);
